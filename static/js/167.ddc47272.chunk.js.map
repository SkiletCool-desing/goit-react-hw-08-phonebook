{"version":3,"file":"static/js/167.ddc47272.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","redux/contact/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__g0qS5\",\"text\":\"Contacts_text__Cijp1\",\"button\":\"Contacts_button__vUlqW\"};","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contact/operations';\nimport css from './Contacts.module.css';\n\nexport const Contacts = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{name}</p> :\n      <p className={css.text}>{number}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { Contacts } from '../Contacts/Contacts';\nimport { selectAllContacts, selectFilter } from '../../redux/contact/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  console.log(filter);\n\n  const filteredContacts = () => {\n  const normalizedContacts = filter.toLowerCase();\n  return contacts.filter(\n        (contact) =>\n          contact.name.toLowerCase().includes(normalizedContacts)\n      )\n};\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts().map(({ id, name, number }) => (\n        <li key={id}>\n          <Contacts id={id} text={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","import { useDispatch } from 'react-redux';\nimport { addContacts } from '../../redux/contact/operations';\nimport css from './ContactEditor.module.css';\n\nexport const ContactsEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    const number = form.elements.number.value;\n    \n    if (text !== '' || number !== \"\") {\n      dispatch(addContacts({ name:text, number}));\n      form.reset();\n      return;\n    }\n    alert('Contacts cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input name=\"text\" className={css.input} />\n      <input name=\"number\" className={css.input} />\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterReducer';\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const handleChange = (event) => {\n        dispatch(setFilter(event.target.value)); \n    }\n  return (\n    <label htmlFor=\"filter\">\n      <span>Find contacts by name</span>\n      <input type=\"text\" onChange={handleChange} />\n    </label>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from '../redux/contact/operations';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { selectLoading } from '../redux/contact/selectors';\nimport { ContactsEditor } from 'components/ContactEditor/ContactEditor';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <p>Your contacts</p>\n      <Filter/>\n      <ContactsEditor/>\n      <ContactList/>\n      <div>{isLoading && 'Request in progress...'}</div>\n    </>\n  );\n}"],"names":["Contacts","_ref","id","name","number","dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","onClick","deleteContacts","selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","ContactList","useSelector","console","log","normalizedContacts","toLowerCase","contact","includes","filteredContacts","map","text","ContactsEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addContacts","reset","alert","Filter","htmlFor","onChange","event","setFilter","target","isLoading","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}